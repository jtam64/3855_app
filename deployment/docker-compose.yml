version: '3.3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    restart: always
    ports:
      - "2181"
    hostname: zookeeper

  kafka:
    image: wurstmeister/kafka
    restart: always
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: mysql-kafka.westus3.cloudapp.azure.com # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://mysql-kafka.westus3.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
    - "zookeeper"
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
    # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql

  receiver:
    build: ../receiver
    image: receiver:latest
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - "kafka"
  
  storage:
    build: ../storage
    image: storage:latest
    restart: always
    ports:
      - "8090:8090"
    depends_on:
      kafka:
        condition: service_healthy
  
  processing:
    build: ../processing
    image: processing:latest
    restart: always
    ports:
      - "8100:8100"
    network_mode: "host"
    depends_on:
      - "storage"

  audit_log:
    build: ../audit
    image: audit
    restart: always
    ports:
      - "8110:8110"
    depends_on:
      - "kafka"

  dashboard:
    build: ../dashboard-ui
    image: dashboard-ui
    restart: always
    ports:
    - "8888:80"
    depends_on:
    - "processing"
    - "audit_log"


# Names our volume
volumes:
  my-db: